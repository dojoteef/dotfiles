#!/bin/sh

# Switch between Ripgrep launcher mode (CTRL-R) and fzf filtering mode (CTRL-F)
RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case "
INITIAL_QUERY="${*:-}"

# See https://www.shellcheck.net/wiki/SC3050
escape() { printf "'%s'\\n" "$(printf '%s' "$1" | sed -e "s/'/'\\\\''/g")"; }

FZF_DEFAULT_COMMAND="$RG_PREFIX $(escape "$INITIAL_QUERY")" \
fzf --ansi \
    --color "hl:-1:underline,hl+:-1:underline:reverse" \
    --disabled --query "$INITIAL_QUERY" \
    --bind "change:reload:sleep 0.1; $RG_PREFIX {q} || true" \
    --bind "ctrl-f:unbind(change,ctrl-f)+change-prompt(2. fzf> )+enable-search+clear-query+rebind(ctrl-r)" \
    --bind "ctrl-r:unbind(ctrl-r)+change-prompt(1. ripgrep> )+disable-search+reload($RG_PREFIX {q} || true)+rebind(change,ctrl-f)" \
    --prompt '1. Ripgrep> ' \
    --delimiter : \
    --header '╱ CTRL-R (Ripgrep mode) ╱ CTRL-F (fzf mode) ╱' \
    --preview 'bat --color=always {1} --highlight-line {2}' \
    --preview-window 'up,60%,border-bottom,+{2}+3/3,~3' | (
    # Pipe into a subshell (started by the parens) so 'read' can work properly. This means
    # all subprocesses (including the editor) will also receive stdin from the pipe (which should
    # be empty after the call to 'read'). To prevent that from happening, pipe stdin to stdout using
    # '0>&1'
    IFS=: read -r FPATH LINE
    [ -n "$FPATH" ] && $EDITOR "$FPATH" "+$LINE" 0>&1
)
